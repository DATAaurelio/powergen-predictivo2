{
  "cells": [
    {
      "cell_type": "markdown",
      "source": [
        "#Carga de Datos"
      ],
      "metadata": {
        "nteract": {
          "transient": {
            "deleting": false
          }
        }
      }
    },
    {
      "cell_type": "code",
      "source": [
        "import pandas as pd\n",
        "import numpy as np\n",
        "from tabulate import tabulate\n",
        "import matplotlib.pyplot as plt\n",
        "import seaborn as sns"
      ],
      "outputs": [],
      "execution_count": 2,
      "metadata": {
        "gather": {
          "logged": 1739438374448
        }
      }
    },
    {
      "cell_type": "code",
      "source": [
        "import os \n",
        "\n",
        "df_caracteristicas_equipos = pd.read_csv('./data/Caracteristicas_Equipos.csv')\n",
        "df_caracteristicas_equipos\n",
        "df_historicos_ordenes = pd.read_csv('./data/Historicos_Ordenes.csv')\n",
        "df_historicos_ordenes\n",
        "df_registros_condiciones = pd.read_csv('./data/Registros_Condiciones.csv')\n",
        "df_registros_condiciones"
      ],
      "outputs": [
        {
          "output_type": "execute_result",
          "execution_count": 4,
          "data": {
            "text/plain": "      ID_Registro  ID_Equipo                Fecha  Temperatura_C  \\\n0               1        260  2020-01-01 00:00:00         101.43   \n1               2        376  2020-01-01 01:00:00         118.51   \n2               3        443  2020-01-01 02:00:00          76.04   \n3               4        281  2020-01-01 03:00:00          97.09   \n4               5        427  2020-01-01 04:00:00         139.42   \n...           ...        ...                  ...            ...   \n8995         8996        299  2021-01-09 19:00:00          51.08   \n8996         8997        160  2021-01-09 20:00:00         122.18   \n8997         8998        160  2021-01-09 21:00:00         119.70   \n8998         8999         45  2021-01-09 22:00:00          57.77   \n8999         9000         61  2021-01-09 23:00:00         130.10   \n\n      Vibracion_mm_s  Horas_Operativas  \n0               1.22           71849.0  \n1               2.97           49670.0  \n2               2.93           33106.0  \n3               3.25           31744.0  \n4               4.22           78104.0  \n...              ...               ...  \n8995            2.32           97743.0  \n8996            2.65           84374.0  \n8997            2.98           16939.0  \n8998            3.39           86679.0  \n8999            4.06           46702.0  \n\n[9000 rows x 6 columns]",
            "text/html": "<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>ID_Registro</th>\n      <th>ID_Equipo</th>\n      <th>Fecha</th>\n      <th>Temperatura_C</th>\n      <th>Vibracion_mm_s</th>\n      <th>Horas_Operativas</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>1</td>\n      <td>260</td>\n      <td>2020-01-01 00:00:00</td>\n      <td>101.43</td>\n      <td>1.22</td>\n      <td>71849.0</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>2</td>\n      <td>376</td>\n      <td>2020-01-01 01:00:00</td>\n      <td>118.51</td>\n      <td>2.97</td>\n      <td>49670.0</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>3</td>\n      <td>443</td>\n      <td>2020-01-01 02:00:00</td>\n      <td>76.04</td>\n      <td>2.93</td>\n      <td>33106.0</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>4</td>\n      <td>281</td>\n      <td>2020-01-01 03:00:00</td>\n      <td>97.09</td>\n      <td>3.25</td>\n      <td>31744.0</td>\n    </tr>\n    <tr>\n      <th>4</th>\n      <td>5</td>\n      <td>427</td>\n      <td>2020-01-01 04:00:00</td>\n      <td>139.42</td>\n      <td>4.22</td>\n      <td>78104.0</td>\n    </tr>\n    <tr>\n      <th>...</th>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n    </tr>\n    <tr>\n      <th>8995</th>\n      <td>8996</td>\n      <td>299</td>\n      <td>2021-01-09 19:00:00</td>\n      <td>51.08</td>\n      <td>2.32</td>\n      <td>97743.0</td>\n    </tr>\n    <tr>\n      <th>8996</th>\n      <td>8997</td>\n      <td>160</td>\n      <td>2021-01-09 20:00:00</td>\n      <td>122.18</td>\n      <td>2.65</td>\n      <td>84374.0</td>\n    </tr>\n    <tr>\n      <th>8997</th>\n      <td>8998</td>\n      <td>160</td>\n      <td>2021-01-09 21:00:00</td>\n      <td>119.70</td>\n      <td>2.98</td>\n      <td>16939.0</td>\n    </tr>\n    <tr>\n      <th>8998</th>\n      <td>8999</td>\n      <td>45</td>\n      <td>2021-01-09 22:00:00</td>\n      <td>57.77</td>\n      <td>3.39</td>\n      <td>86679.0</td>\n    </tr>\n    <tr>\n      <th>8999</th>\n      <td>9000</td>\n      <td>61</td>\n      <td>2021-01-09 23:00:00</td>\n      <td>130.10</td>\n      <td>4.06</td>\n      <td>46702.0</td>\n    </tr>\n  </tbody>\n</table>\n<p>9000 rows × 6 columns</p>\n</div>"
          },
          "metadata": {}
        }
      ],
      "execution_count": 4,
      "metadata": {
        "gather": {
          "logged": 1739438430205
        }
      }
    },
    {
      "cell_type": "markdown",
      "source": [
        "Revisión Nulos"
      ],
      "metadata": {
        "nteract": {
          "transient": {
            "deleting": false
          }
        }
      }
    },
    {
      "cell_type": "code",
      "source": [
        "df_caracteristicas_equipos.info()"
      ],
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": "<class 'pandas.core.frame.DataFrame'>\nRangeIndex: 505 entries, 0 to 504\nData columns (total 6 columns):\n #   Column                       Non-Null Count  Dtype  \n---  ------                       --------------  -----  \n 0   ID_Equipo                    505 non-null    int64  \n 1   Tipo_Equipo                  505 non-null    object \n 2   Fabricante                   505 non-null    object \n 3   Modelo                       505 non-null    object \n 4   Potencia_kW                  505 non-null    float64\n 5   Horas_Recomendadas_Revision  505 non-null    int64  \ndtypes: float64(1), int64(2), object(3)\nmemory usage: 23.8+ KB\n"
        }
      ],
      "execution_count": 5,
      "metadata": {
        "gather": {
          "logged": 1739438499133
        }
      }
    },
    {
      "cell_type": "code",
      "source": [
        "df_historicos_ordenes.info()"
      ],
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": "<class 'pandas.core.frame.DataFrame'>\nRangeIndex: 10020 entries, 0 to 10019\nData columns (total 7 columns):\n #   Column               Non-Null Count  Dtype  \n---  ------               --------------  -----  \n 0   ID_Orden             10020 non-null  int64  \n 1   ID_Equipo            10020 non-null  int64  \n 2   Fecha                10020 non-null  object \n 3   Tipo_Mantenimiento   10020 non-null  object \n 4   Costo_Mantenimiento  9971 non-null   float64\n 5   Duracion_Horas       10020 non-null  int64  \n 6   Ubicacion            10020 non-null  object \ndtypes: float64(1), int64(3), object(3)\nmemory usage: 548.1+ KB\n"
        }
      ],
      "execution_count": 6,
      "metadata": {
        "gather": {
          "logged": 1739438529409
        }
      }
    },
    {
      "cell_type": "code",
      "source": [
        "df_historicos_ordenes.head()"
      ],
      "outputs": [
        {
          "output_type": "execute_result",
          "execution_count": 10,
          "data": {
            "text/plain": "   ID_Orden  ID_Equipo                Fecha Tipo_Mantenimiento  \\\n0         1         36  2020-01-01 00:00:00         Preventivo   \n1         2        244  2020-01-01 01:00:00         Preventivo   \n2         3        297  2020-01-01 02:00:00         Preventivo   \n3         4        431  2020-01-01 03:00:00         Correctivo   \n4         5        403  2020-01-01 04:00:00         Correctivo   \n\n   Costo_Mantenimiento  Duracion_Horas     Ubicacion  \n0              6754.12               3  Planta Norte  \n1              4274.63              35  Planta Norte  \n2              5752.00              25  Planta Norte  \n3              5690.14               8    Planta Sur  \n4              7048.79              28  Planta Norte  ",
            "text/html": "<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>ID_Orden</th>\n      <th>ID_Equipo</th>\n      <th>Fecha</th>\n      <th>Tipo_Mantenimiento</th>\n      <th>Costo_Mantenimiento</th>\n      <th>Duracion_Horas</th>\n      <th>Ubicacion</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>1</td>\n      <td>36</td>\n      <td>2020-01-01 00:00:00</td>\n      <td>Preventivo</td>\n      <td>6754.12</td>\n      <td>3</td>\n      <td>Planta Norte</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>2</td>\n      <td>244</td>\n      <td>2020-01-01 01:00:00</td>\n      <td>Preventivo</td>\n      <td>4274.63</td>\n      <td>35</td>\n      <td>Planta Norte</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>3</td>\n      <td>297</td>\n      <td>2020-01-01 02:00:00</td>\n      <td>Preventivo</td>\n      <td>5752.00</td>\n      <td>25</td>\n      <td>Planta Norte</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>4</td>\n      <td>431</td>\n      <td>2020-01-01 03:00:00</td>\n      <td>Correctivo</td>\n      <td>5690.14</td>\n      <td>8</td>\n      <td>Planta Sur</td>\n    </tr>\n    <tr>\n      <th>4</th>\n      <td>5</td>\n      <td>403</td>\n      <td>2020-01-01 04:00:00</td>\n      <td>Correctivo</td>\n      <td>7048.79</td>\n      <td>28</td>\n      <td>Planta Norte</td>\n    </tr>\n  </tbody>\n</table>\n</div>"
          },
          "metadata": {}
        }
      ],
      "execution_count": 10,
      "metadata": {
        "gather": {
          "logged": 1739438785269
        }
      }
    },
    {
      "cell_type": "code",
      "source": [
        "df_historicos_ordenes.tail()"
      ],
      "outputs": [
        {
          "output_type": "execute_result",
          "execution_count": 11,
          "data": {
            "text/plain": "       ID_Orden  ID_Equipo                Fecha Tipo_Mantenimiento  \\\n10015        16        203  2020-01-01 15:00:00         Preventivo   \n10016        17        386  2020-01-01 16:00:00         Preventivo   \n10017        18        122  2020-01-01 17:00:00         Preventivo   \n10018        19         33  2020-01-01 18:00:00         Preventivo   \n10019        20        390  2020-01-01 19:00:00         Correctivo   \n\n       Costo_Mantenimiento  Duracion_Horas     Ubicacion  \n10015               320.94              46  Planta Norte  \n10016              2806.72              20  Planta Oeste  \n10017              8919.97              14  Planta Norte  \n10018              6522.17              24    Planta Sur  \n10019              1416.80              37    Planta Sur  ",
            "text/html": "<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>ID_Orden</th>\n      <th>ID_Equipo</th>\n      <th>Fecha</th>\n      <th>Tipo_Mantenimiento</th>\n      <th>Costo_Mantenimiento</th>\n      <th>Duracion_Horas</th>\n      <th>Ubicacion</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>10015</th>\n      <td>16</td>\n      <td>203</td>\n      <td>2020-01-01 15:00:00</td>\n      <td>Preventivo</td>\n      <td>320.94</td>\n      <td>46</td>\n      <td>Planta Norte</td>\n    </tr>\n    <tr>\n      <th>10016</th>\n      <td>17</td>\n      <td>386</td>\n      <td>2020-01-01 16:00:00</td>\n      <td>Preventivo</td>\n      <td>2806.72</td>\n      <td>20</td>\n      <td>Planta Oeste</td>\n    </tr>\n    <tr>\n      <th>10017</th>\n      <td>18</td>\n      <td>122</td>\n      <td>2020-01-01 17:00:00</td>\n      <td>Preventivo</td>\n      <td>8919.97</td>\n      <td>14</td>\n      <td>Planta Norte</td>\n    </tr>\n    <tr>\n      <th>10018</th>\n      <td>19</td>\n      <td>33</td>\n      <td>2020-01-01 18:00:00</td>\n      <td>Preventivo</td>\n      <td>6522.17</td>\n      <td>24</td>\n      <td>Planta Sur</td>\n    </tr>\n    <tr>\n      <th>10019</th>\n      <td>20</td>\n      <td>390</td>\n      <td>2020-01-01 19:00:00</td>\n      <td>Correctivo</td>\n      <td>1416.80</td>\n      <td>37</td>\n      <td>Planta Sur</td>\n    </tr>\n  </tbody>\n</table>\n</div>"
          },
          "metadata": {}
        }
      ],
      "execution_count": 11,
      "metadata": {
        "gather": {
          "logged": 1739438800143
        }
      }
    },
    {
      "cell_type": "code",
      "source": [
        "df_historicos_ordenes.isna().sum()"
      ],
      "outputs": [
        {
          "output_type": "execute_result",
          "execution_count": 9,
          "data": {
            "text/plain": "ID_Orden                0\nID_Equipo               0\nFecha                   0\nTipo_Mantenimiento      0\nCosto_Mantenimiento    49\nDuracion_Horas          0\nUbicacion               0\ndtype: int64"
          },
          "metadata": {}
        }
      ],
      "execution_count": 9,
      "metadata": {
        "gather": {
          "logged": 1739438681394
        }
      }
    },
    {
      "cell_type": "code",
      "source": [
        "del_df_historicos_ordenes = df_historicos_ordenes.dropna()\n",
        "del_df_historicos_ordenes"
      ],
      "outputs": [
        {
          "output_type": "execute_result",
          "execution_count": 12,
          "data": {
            "text/plain": "       ID_Orden  ID_Equipo                Fecha Tipo_Mantenimiento  \\\n0             1         36  2020-01-01 00:00:00         Preventivo   \n1             2        244  2020-01-01 01:00:00         Preventivo   \n2             3        297  2020-01-01 02:00:00         Preventivo   \n3             4        431  2020-01-01 03:00:00         Correctivo   \n4             5        403  2020-01-01 04:00:00         Correctivo   \n...         ...        ...                  ...                ...   \n10015        16        203  2020-01-01 15:00:00         Preventivo   \n10016        17        386  2020-01-01 16:00:00         Preventivo   \n10017        18        122  2020-01-01 17:00:00         Preventivo   \n10018        19         33  2020-01-01 18:00:00         Preventivo   \n10019        20        390  2020-01-01 19:00:00         Correctivo   \n\n       Costo_Mantenimiento  Duracion_Horas     Ubicacion  \n0                  6754.12               3  Planta Norte  \n1                  4274.63              35  Planta Norte  \n2                  5752.00              25  Planta Norte  \n3                  5690.14               8    Planta Sur  \n4                  7048.79              28  Planta Norte  \n...                    ...             ...           ...  \n10015               320.94              46  Planta Norte  \n10016              2806.72              20  Planta Oeste  \n10017              8919.97              14  Planta Norte  \n10018              6522.17              24    Planta Sur  \n10019              1416.80              37    Planta Sur  \n\n[9971 rows x 7 columns]",
            "text/html": "<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>ID_Orden</th>\n      <th>ID_Equipo</th>\n      <th>Fecha</th>\n      <th>Tipo_Mantenimiento</th>\n      <th>Costo_Mantenimiento</th>\n      <th>Duracion_Horas</th>\n      <th>Ubicacion</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>1</td>\n      <td>36</td>\n      <td>2020-01-01 00:00:00</td>\n      <td>Preventivo</td>\n      <td>6754.12</td>\n      <td>3</td>\n      <td>Planta Norte</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>2</td>\n      <td>244</td>\n      <td>2020-01-01 01:00:00</td>\n      <td>Preventivo</td>\n      <td>4274.63</td>\n      <td>35</td>\n      <td>Planta Norte</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>3</td>\n      <td>297</td>\n      <td>2020-01-01 02:00:00</td>\n      <td>Preventivo</td>\n      <td>5752.00</td>\n      <td>25</td>\n      <td>Planta Norte</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>4</td>\n      <td>431</td>\n      <td>2020-01-01 03:00:00</td>\n      <td>Correctivo</td>\n      <td>5690.14</td>\n      <td>8</td>\n      <td>Planta Sur</td>\n    </tr>\n    <tr>\n      <th>4</th>\n      <td>5</td>\n      <td>403</td>\n      <td>2020-01-01 04:00:00</td>\n      <td>Correctivo</td>\n      <td>7048.79</td>\n      <td>28</td>\n      <td>Planta Norte</td>\n    </tr>\n    <tr>\n      <th>...</th>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n    </tr>\n    <tr>\n      <th>10015</th>\n      <td>16</td>\n      <td>203</td>\n      <td>2020-01-01 15:00:00</td>\n      <td>Preventivo</td>\n      <td>320.94</td>\n      <td>46</td>\n      <td>Planta Norte</td>\n    </tr>\n    <tr>\n      <th>10016</th>\n      <td>17</td>\n      <td>386</td>\n      <td>2020-01-01 16:00:00</td>\n      <td>Preventivo</td>\n      <td>2806.72</td>\n      <td>20</td>\n      <td>Planta Oeste</td>\n    </tr>\n    <tr>\n      <th>10017</th>\n      <td>18</td>\n      <td>122</td>\n      <td>2020-01-01 17:00:00</td>\n      <td>Preventivo</td>\n      <td>8919.97</td>\n      <td>14</td>\n      <td>Planta Norte</td>\n    </tr>\n    <tr>\n      <th>10018</th>\n      <td>19</td>\n      <td>33</td>\n      <td>2020-01-01 18:00:00</td>\n      <td>Preventivo</td>\n      <td>6522.17</td>\n      <td>24</td>\n      <td>Planta Sur</td>\n    </tr>\n    <tr>\n      <th>10019</th>\n      <td>20</td>\n      <td>390</td>\n      <td>2020-01-01 19:00:00</td>\n      <td>Correctivo</td>\n      <td>1416.80</td>\n      <td>37</td>\n      <td>Planta Sur</td>\n    </tr>\n  </tbody>\n</table>\n<p>9971 rows × 7 columns</p>\n</div>"
          },
          "metadata": {}
        }
      ],
      "execution_count": 12,
      "metadata": {
        "gather": {
          "logged": 1739438993402
        }
      }
    },
    {
      "cell_type": "code",
      "source": [
        "del_df_historicos_ordenes.info()"
      ],
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": "<class 'pandas.core.frame.DataFrame'>\nIndex: 9971 entries, 0 to 10019\nData columns (total 7 columns):\n #   Column               Non-Null Count  Dtype  \n---  ------               --------------  -----  \n 0   ID_Orden             9971 non-null   int64  \n 1   ID_Equipo            9971 non-null   int64  \n 2   Fecha                9971 non-null   object \n 3   Tipo_Mantenimiento   9971 non-null   object \n 4   Costo_Mantenimiento  9971 non-null   float64\n 5   Duracion_Horas       9971 non-null   int64  \n 6   Ubicacion            9971 non-null   object \ndtypes: float64(1), int64(3), object(3)\nmemory usage: 623.2+ KB\n"
        }
      ],
      "execution_count": 13,
      "metadata": {
        "gather": {
          "logged": 1739439010588
        }
      }
    },
    {
      "cell_type": "code",
      "source": [
        "df_registros_condiciones.info()"
      ],
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": "<class 'pandas.core.frame.DataFrame'>\nRangeIndex: 9000 entries, 0 to 8999\nData columns (total 6 columns):\n #   Column            Non-Null Count  Dtype  \n---  ------            --------------  -----  \n 0   ID_Registro       9000 non-null   int64  \n 1   ID_Equipo         9000 non-null   int64  \n 2   Fecha             9000 non-null   object \n 3   Temperatura_C     9000 non-null   float64\n 4   Vibracion_mm_s    9000 non-null   float64\n 5   Horas_Operativas  8960 non-null   float64\ndtypes: float64(3), int64(2), object(1)\nmemory usage: 422.0+ KB\n"
        }
      ],
      "execution_count": 7,
      "metadata": {
        "gather": {
          "logged": 1739438583707
        }
      }
    },
    {
      "cell_type": "code",
      "source": [
        "df_registros_condiciones.head()"
      ],
      "outputs": [
        {
          "output_type": "execute_result",
          "execution_count": 14,
          "data": {
            "text/plain": "   ID_Registro  ID_Equipo                Fecha  Temperatura_C  Vibracion_mm_s  \\\n0            1        260  2020-01-01 00:00:00         101.43            1.22   \n1            2        376  2020-01-01 01:00:00         118.51            2.97   \n2            3        443  2020-01-01 02:00:00          76.04            2.93   \n3            4        281  2020-01-01 03:00:00          97.09            3.25   \n4            5        427  2020-01-01 04:00:00         139.42            4.22   \n\n   Horas_Operativas  \n0           71849.0  \n1           49670.0  \n2           33106.0  \n3           31744.0  \n4           78104.0  ",
            "text/html": "<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>ID_Registro</th>\n      <th>ID_Equipo</th>\n      <th>Fecha</th>\n      <th>Temperatura_C</th>\n      <th>Vibracion_mm_s</th>\n      <th>Horas_Operativas</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>1</td>\n      <td>260</td>\n      <td>2020-01-01 00:00:00</td>\n      <td>101.43</td>\n      <td>1.22</td>\n      <td>71849.0</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>2</td>\n      <td>376</td>\n      <td>2020-01-01 01:00:00</td>\n      <td>118.51</td>\n      <td>2.97</td>\n      <td>49670.0</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>3</td>\n      <td>443</td>\n      <td>2020-01-01 02:00:00</td>\n      <td>76.04</td>\n      <td>2.93</td>\n      <td>33106.0</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>4</td>\n      <td>281</td>\n      <td>2020-01-01 03:00:00</td>\n      <td>97.09</td>\n      <td>3.25</td>\n      <td>31744.0</td>\n    </tr>\n    <tr>\n      <th>4</th>\n      <td>5</td>\n      <td>427</td>\n      <td>2020-01-01 04:00:00</td>\n      <td>139.42</td>\n      <td>4.22</td>\n      <td>78104.0</td>\n    </tr>\n  </tbody>\n</table>\n</div>"
          },
          "metadata": {}
        }
      ],
      "execution_count": 14,
      "metadata": {
        "gather": {
          "logged": 1739439046670
        }
      }
    },
    {
      "cell_type": "code",
      "source": [
        "df_registros_condiciones.tail()"
      ],
      "outputs": [
        {
          "output_type": "execute_result",
          "execution_count": 15,
          "data": {
            "text/plain": "      ID_Registro  ID_Equipo                Fecha  Temperatura_C  \\\n8995         8996        299  2021-01-09 19:00:00          51.08   \n8996         8997        160  2021-01-09 20:00:00         122.18   \n8997         8998        160  2021-01-09 21:00:00         119.70   \n8998         8999         45  2021-01-09 22:00:00          57.77   \n8999         9000         61  2021-01-09 23:00:00         130.10   \n\n      Vibracion_mm_s  Horas_Operativas  \n8995            2.32           97743.0  \n8996            2.65           84374.0  \n8997            2.98           16939.0  \n8998            3.39           86679.0  \n8999            4.06           46702.0  ",
            "text/html": "<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>ID_Registro</th>\n      <th>ID_Equipo</th>\n      <th>Fecha</th>\n      <th>Temperatura_C</th>\n      <th>Vibracion_mm_s</th>\n      <th>Horas_Operativas</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>8995</th>\n      <td>8996</td>\n      <td>299</td>\n      <td>2021-01-09 19:00:00</td>\n      <td>51.08</td>\n      <td>2.32</td>\n      <td>97743.0</td>\n    </tr>\n    <tr>\n      <th>8996</th>\n      <td>8997</td>\n      <td>160</td>\n      <td>2021-01-09 20:00:00</td>\n      <td>122.18</td>\n      <td>2.65</td>\n      <td>84374.0</td>\n    </tr>\n    <tr>\n      <th>8997</th>\n      <td>8998</td>\n      <td>160</td>\n      <td>2021-01-09 21:00:00</td>\n      <td>119.70</td>\n      <td>2.98</td>\n      <td>16939.0</td>\n    </tr>\n    <tr>\n      <th>8998</th>\n      <td>8999</td>\n      <td>45</td>\n      <td>2021-01-09 22:00:00</td>\n      <td>57.77</td>\n      <td>3.39</td>\n      <td>86679.0</td>\n    </tr>\n    <tr>\n      <th>8999</th>\n      <td>9000</td>\n      <td>61</td>\n      <td>2021-01-09 23:00:00</td>\n      <td>130.10</td>\n      <td>4.06</td>\n      <td>46702.0</td>\n    </tr>\n  </tbody>\n</table>\n</div>"
          },
          "metadata": {}
        }
      ],
      "execution_count": 15,
      "metadata": {
        "gather": {
          "logged": 1739439073717
        }
      }
    },
    {
      "cell_type": "code",
      "source": [
        "df_registros_condiciones.isna().sum()"
      ],
      "outputs": [
        {
          "output_type": "execute_result",
          "execution_count": 16,
          "data": {
            "text/plain": "ID_Registro          0\nID_Equipo            0\nFecha                0\nTemperatura_C        0\nVibracion_mm_s       0\nHoras_Operativas    40\ndtype: int64"
          },
          "metadata": {}
        }
      ],
      "execution_count": 16,
      "metadata": {
        "gather": {
          "logged": 1739439109497
        }
      }
    },
    {
      "cell_type": "code",
      "source": [
        "del_df_registros_condiciones = df_registros_condiciones.dropna()\n",
        "del_df_registros_condiciones"
      ],
      "outputs": [
        {
          "output_type": "execute_result",
          "execution_count": 17,
          "data": {
            "text/plain": "      ID_Registro  ID_Equipo                Fecha  Temperatura_C  \\\n0               1        260  2020-01-01 00:00:00         101.43   \n1               2        376  2020-01-01 01:00:00         118.51   \n2               3        443  2020-01-01 02:00:00          76.04   \n3               4        281  2020-01-01 03:00:00          97.09   \n4               5        427  2020-01-01 04:00:00         139.42   \n...           ...        ...                  ...            ...   \n8995         8996        299  2021-01-09 19:00:00          51.08   \n8996         8997        160  2021-01-09 20:00:00         122.18   \n8997         8998        160  2021-01-09 21:00:00         119.70   \n8998         8999         45  2021-01-09 22:00:00          57.77   \n8999         9000         61  2021-01-09 23:00:00         130.10   \n\n      Vibracion_mm_s  Horas_Operativas  \n0               1.22           71849.0  \n1               2.97           49670.0  \n2               2.93           33106.0  \n3               3.25           31744.0  \n4               4.22           78104.0  \n...              ...               ...  \n8995            2.32           97743.0  \n8996            2.65           84374.0  \n8997            2.98           16939.0  \n8998            3.39           86679.0  \n8999            4.06           46702.0  \n\n[8960 rows x 6 columns]",
            "text/html": "<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>ID_Registro</th>\n      <th>ID_Equipo</th>\n      <th>Fecha</th>\n      <th>Temperatura_C</th>\n      <th>Vibracion_mm_s</th>\n      <th>Horas_Operativas</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>1</td>\n      <td>260</td>\n      <td>2020-01-01 00:00:00</td>\n      <td>101.43</td>\n      <td>1.22</td>\n      <td>71849.0</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>2</td>\n      <td>376</td>\n      <td>2020-01-01 01:00:00</td>\n      <td>118.51</td>\n      <td>2.97</td>\n      <td>49670.0</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>3</td>\n      <td>443</td>\n      <td>2020-01-01 02:00:00</td>\n      <td>76.04</td>\n      <td>2.93</td>\n      <td>33106.0</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>4</td>\n      <td>281</td>\n      <td>2020-01-01 03:00:00</td>\n      <td>97.09</td>\n      <td>3.25</td>\n      <td>31744.0</td>\n    </tr>\n    <tr>\n      <th>4</th>\n      <td>5</td>\n      <td>427</td>\n      <td>2020-01-01 04:00:00</td>\n      <td>139.42</td>\n      <td>4.22</td>\n      <td>78104.0</td>\n    </tr>\n    <tr>\n      <th>...</th>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n    </tr>\n    <tr>\n      <th>8995</th>\n      <td>8996</td>\n      <td>299</td>\n      <td>2021-01-09 19:00:00</td>\n      <td>51.08</td>\n      <td>2.32</td>\n      <td>97743.0</td>\n    </tr>\n    <tr>\n      <th>8996</th>\n      <td>8997</td>\n      <td>160</td>\n      <td>2021-01-09 20:00:00</td>\n      <td>122.18</td>\n      <td>2.65</td>\n      <td>84374.0</td>\n    </tr>\n    <tr>\n      <th>8997</th>\n      <td>8998</td>\n      <td>160</td>\n      <td>2021-01-09 21:00:00</td>\n      <td>119.70</td>\n      <td>2.98</td>\n      <td>16939.0</td>\n    </tr>\n    <tr>\n      <th>8998</th>\n      <td>8999</td>\n      <td>45</td>\n      <td>2021-01-09 22:00:00</td>\n      <td>57.77</td>\n      <td>3.39</td>\n      <td>86679.0</td>\n    </tr>\n    <tr>\n      <th>8999</th>\n      <td>9000</td>\n      <td>61</td>\n      <td>2021-01-09 23:00:00</td>\n      <td>130.10</td>\n      <td>4.06</td>\n      <td>46702.0</td>\n    </tr>\n  </tbody>\n</table>\n<p>8960 rows × 6 columns</p>\n</div>"
          },
          "metadata": {}
        }
      ],
      "execution_count": 17,
      "metadata": {
        "gather": {
          "logged": 1739439170488
        }
      }
    },
    {
      "cell_type": "code",
      "source": [
        "del_df_registros_condiciones.info()"
      ],
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": "<class 'pandas.core.frame.DataFrame'>\nIndex: 8960 entries, 0 to 8999\nData columns (total 6 columns):\n #   Column            Non-Null Count  Dtype  \n---  ------            --------------  -----  \n 0   ID_Registro       8960 non-null   int64  \n 1   ID_Equipo         8960 non-null   int64  \n 2   Fecha             8960 non-null   object \n 3   Temperatura_C     8960 non-null   float64\n 4   Vibracion_mm_s    8960 non-null   float64\n 5   Horas_Operativas  8960 non-null   float64\ndtypes: float64(3), int64(2), object(1)\nmemory usage: 490.0+ KB\n"
        }
      ],
      "execution_count": 18,
      "metadata": {
        "gather": {
          "logged": 1739439184620
        }
      }
    },
    {
      "cell_type": "markdown",
      "source": [
        "Duplicados"
      ],
      "metadata": {
        "nteract": {
          "transient": {
            "deleting": false
          }
        }
      }
    },
    {
      "cell_type": "code",
      "source": [
        "df_caracteristicas_equipos.duplicated().sum()"
      ],
      "outputs": [
        {
          "output_type": "execute_result",
          "execution_count": 20,
          "data": {
            "text/plain": "5"
          },
          "metadata": {}
        }
      ],
      "execution_count": 20,
      "metadata": {
        "gather": {
          "logged": 1739439425192
        }
      }
    },
    {
      "cell_type": "code",
      "source": [
        "del_df_caracteristicas_equipos = df_caracteristicas_equipos.drop_duplicates()\n",
        "del_df_caracteristicas_equipos"
      ],
      "outputs": [
        {
          "output_type": "execute_result",
          "execution_count": 22,
          "data": {
            "text/plain": "     ID_Equipo    Tipo_Equipo Fabricante Modelo  Potencia_kW  \\\n0            1      Compresor    Siemens   Z300       3429.0   \n1            2  Transformador    Siemens   Y200         75.0   \n2            3      Compresor        ABB   Z300       4526.0   \n3            4      Compresor         GE   X100       3981.0   \n4            5          Motor    Siemens   Y200        377.0   \n..         ...            ...        ...    ...          ...   \n495        496  Transformador  Schneider   Z300        544.0   \n496        497      Compresor         GE   M400       3296.0   \n497        498      Generador    Siemens   X100       4231.0   \n498        499          Motor    Siemens   Y200       3155.0   \n499        500  Transformador         GE   M400       2001.0   \n\n     Horas_Recomendadas_Revision  \n0                           7725  \n1                           7390  \n2                           5238  \n3                           8933  \n4                           5978  \n..                           ...  \n495                         3331  \n496                         8256  \n497                         9047  \n498                          932  \n499                         2031  \n\n[500 rows x 6 columns]",
            "text/html": "<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>ID_Equipo</th>\n      <th>Tipo_Equipo</th>\n      <th>Fabricante</th>\n      <th>Modelo</th>\n      <th>Potencia_kW</th>\n      <th>Horas_Recomendadas_Revision</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>1</td>\n      <td>Compresor</td>\n      <td>Siemens</td>\n      <td>Z300</td>\n      <td>3429.0</td>\n      <td>7725</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>2</td>\n      <td>Transformador</td>\n      <td>Siemens</td>\n      <td>Y200</td>\n      <td>75.0</td>\n      <td>7390</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>3</td>\n      <td>Compresor</td>\n      <td>ABB</td>\n      <td>Z300</td>\n      <td>4526.0</td>\n      <td>5238</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>4</td>\n      <td>Compresor</td>\n      <td>GE</td>\n      <td>X100</td>\n      <td>3981.0</td>\n      <td>8933</td>\n    </tr>\n    <tr>\n      <th>4</th>\n      <td>5</td>\n      <td>Motor</td>\n      <td>Siemens</td>\n      <td>Y200</td>\n      <td>377.0</td>\n      <td>5978</td>\n    </tr>\n    <tr>\n      <th>...</th>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n    </tr>\n    <tr>\n      <th>495</th>\n      <td>496</td>\n      <td>Transformador</td>\n      <td>Schneider</td>\n      <td>Z300</td>\n      <td>544.0</td>\n      <td>3331</td>\n    </tr>\n    <tr>\n      <th>496</th>\n      <td>497</td>\n      <td>Compresor</td>\n      <td>GE</td>\n      <td>M400</td>\n      <td>3296.0</td>\n      <td>8256</td>\n    </tr>\n    <tr>\n      <th>497</th>\n      <td>498</td>\n      <td>Generador</td>\n      <td>Siemens</td>\n      <td>X100</td>\n      <td>4231.0</td>\n      <td>9047</td>\n    </tr>\n    <tr>\n      <th>498</th>\n      <td>499</td>\n      <td>Motor</td>\n      <td>Siemens</td>\n      <td>Y200</td>\n      <td>3155.0</td>\n      <td>932</td>\n    </tr>\n    <tr>\n      <th>499</th>\n      <td>500</td>\n      <td>Transformador</td>\n      <td>GE</td>\n      <td>M400</td>\n      <td>2001.0</td>\n      <td>2031</td>\n    </tr>\n  </tbody>\n</table>\n<p>500 rows × 6 columns</p>\n</div>"
          },
          "metadata": {}
        }
      ],
      "execution_count": 22,
      "metadata": {
        "gather": {
          "logged": 1739439801294
        }
      }
    },
    {
      "cell_type": "code",
      "source": [
        "del_df_historicos_ordenes.duplicated().sum()"
      ],
      "outputs": [
        {
          "output_type": "execute_result",
          "execution_count": 23,
          "data": {
            "text/plain": "20"
          },
          "metadata": {}
        }
      ],
      "execution_count": 23,
      "metadata": {
        "gather": {
          "logged": 1739439861375
        }
      }
    },
    {
      "cell_type": "code",
      "source": [
        "del_df_historicos_ordenes = del_df_historicos_ordenes.drop_duplicates()\n",
        "del_df_historicos_ordenes"
      ],
      "outputs": [
        {
          "output_type": "execute_result",
          "execution_count": 25,
          "data": {
            "text/plain": "      ID_Orden  ID_Equipo                Fecha Tipo_Mantenimiento  \\\n0            1         36  2020-01-01 00:00:00         Preventivo   \n1            2        244  2020-01-01 01:00:00         Preventivo   \n2            3        297  2020-01-01 02:00:00         Preventivo   \n3            4        431  2020-01-01 03:00:00         Correctivo   \n4            5        403  2020-01-01 04:00:00         Correctivo   \n...        ...        ...                  ...                ...   \n9995      9996        127  2021-02-20 11:00:00         Correctivo   \n9996      9997        237  2021-02-20 12:00:00         Preventivo   \n9997      9998        120  2021-02-20 13:00:00         Preventivo   \n9998      9999        258  2021-02-20 14:00:00         Preventivo   \n9999     10000        125  2021-02-20 15:00:00         Preventivo   \n\n      Costo_Mantenimiento  Duracion_Horas     Ubicacion  \n0                 6754.12               3  Planta Norte  \n1                 4274.63              35  Planta Norte  \n2                 5752.00              25  Planta Norte  \n3                 5690.14               8    Planta Sur  \n4                 7048.79              28  Planta Norte  \n...                   ...             ...           ...  \n9995              8326.79              16   Planta Este  \n9996              5563.86              32   Planta Este  \n9997              3972.80              41    Planta Sur  \n9998              9794.29              37  Planta Norte  \n9999              8176.84              23  Planta Oeste  \n\n[9951 rows x 7 columns]",
            "text/html": "<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>ID_Orden</th>\n      <th>ID_Equipo</th>\n      <th>Fecha</th>\n      <th>Tipo_Mantenimiento</th>\n      <th>Costo_Mantenimiento</th>\n      <th>Duracion_Horas</th>\n      <th>Ubicacion</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>1</td>\n      <td>36</td>\n      <td>2020-01-01 00:00:00</td>\n      <td>Preventivo</td>\n      <td>6754.12</td>\n      <td>3</td>\n      <td>Planta Norte</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>2</td>\n      <td>244</td>\n      <td>2020-01-01 01:00:00</td>\n      <td>Preventivo</td>\n      <td>4274.63</td>\n      <td>35</td>\n      <td>Planta Norte</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>3</td>\n      <td>297</td>\n      <td>2020-01-01 02:00:00</td>\n      <td>Preventivo</td>\n      <td>5752.00</td>\n      <td>25</td>\n      <td>Planta Norte</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>4</td>\n      <td>431</td>\n      <td>2020-01-01 03:00:00</td>\n      <td>Correctivo</td>\n      <td>5690.14</td>\n      <td>8</td>\n      <td>Planta Sur</td>\n    </tr>\n    <tr>\n      <th>4</th>\n      <td>5</td>\n      <td>403</td>\n      <td>2020-01-01 04:00:00</td>\n      <td>Correctivo</td>\n      <td>7048.79</td>\n      <td>28</td>\n      <td>Planta Norte</td>\n    </tr>\n    <tr>\n      <th>...</th>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n    </tr>\n    <tr>\n      <th>9995</th>\n      <td>9996</td>\n      <td>127</td>\n      <td>2021-02-20 11:00:00</td>\n      <td>Correctivo</td>\n      <td>8326.79</td>\n      <td>16</td>\n      <td>Planta Este</td>\n    </tr>\n    <tr>\n      <th>9996</th>\n      <td>9997</td>\n      <td>237</td>\n      <td>2021-02-20 12:00:00</td>\n      <td>Preventivo</td>\n      <td>5563.86</td>\n      <td>32</td>\n      <td>Planta Este</td>\n    </tr>\n    <tr>\n      <th>9997</th>\n      <td>9998</td>\n      <td>120</td>\n      <td>2021-02-20 13:00:00</td>\n      <td>Preventivo</td>\n      <td>3972.80</td>\n      <td>41</td>\n      <td>Planta Sur</td>\n    </tr>\n    <tr>\n      <th>9998</th>\n      <td>9999</td>\n      <td>258</td>\n      <td>2021-02-20 14:00:00</td>\n      <td>Preventivo</td>\n      <td>9794.29</td>\n      <td>37</td>\n      <td>Planta Norte</td>\n    </tr>\n    <tr>\n      <th>9999</th>\n      <td>10000</td>\n      <td>125</td>\n      <td>2021-02-20 15:00:00</td>\n      <td>Preventivo</td>\n      <td>8176.84</td>\n      <td>23</td>\n      <td>Planta Oeste</td>\n    </tr>\n  </tbody>\n</table>\n<p>9951 rows × 7 columns</p>\n</div>"
          },
          "metadata": {}
        }
      ],
      "execution_count": 25,
      "metadata": {
        "gather": {
          "logged": 1739439986339
        }
      }
    },
    {
      "cell_type": "code",
      "source": [
        "del_df_registros_condiciones.duplicated().sum()"
      ],
      "outputs": [
        {
          "output_type": "execute_result",
          "execution_count": 26,
          "data": {
            "text/plain": "0"
          },
          "metadata": {}
        }
      ],
      "execution_count": 26,
      "metadata": {
        "gather": {
          "logged": 1739440063386
        }
      }
    }
  ],
  "metadata": {
    "kernelspec": {
      "name": "python38-azureml",
      "language": "python",
      "display_name": "Python 3.8 - AzureML"
    },
    "language_info": {
      "name": "python",
      "version": "3.10.11",
      "mimetype": "text/x-python",
      "codemirror_mode": {
        "name": "ipython",
        "version": 3
      },
      "pygments_lexer": "ipython3",
      "nbconvert_exporter": "python",
      "file_extension": ".py"
    },
    "microsoft": {
      "ms_spell_check": {
        "ms_spell_check_language": "es"
      },
      "host": {
        "AzureML": {
          "notebookHasBeenCompleted": true
        }
      }
    },
    "kernel_info": {
      "name": "python38-azureml"
    },
    "nteract": {
      "version": "nteract-front-end@1.0.0"
    }
  },
  "nbformat": 4,
  "nbformat_minor": 2
}